{"version":3,"sources":["assets/mag-glass.svg","assets/send-24px.svg","assets/voiceIcon.svg","assets/companyLogo.svg","utils/theme.js","components/Footer.js","components/ARStatsComponent.js","components/AnalyticsSecComponent.js","utils/constants.js","services/services.js","components/GridPanelComponent.js","services/Predict.js","components/SearchPanelComponent.js","services/AllCustomers.js","services/SearchedResults.js","components/ChatBot.js","views/CollectorDashboard.js","services/AllCompany.js","services/searchedCustomer.js","components/DetailedGridComponent.js","services/CustomerARStats.js","services/ModifyRecord.js","views/CustomerDetails.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","pxToRem","px","createMuiTheme","palette","primary","main","light","dark","withStyles","theme","mainBackground","background","height","width","root","flexGrow","paper","display","alignItems","justifyContent","flexDirection","titleName","fontSize","color","subTitleName","withTheme","props","item","xs","style","marginRight","ARStatsComponent","state","autoid","id","classes","this","className","body","variant","align","textColorH","cardTitle","textColorV","cardValue","React","Component","backgroundColor","AnalyticsSecComponent","parseCategories","cat","comp","map","d","push","business_code","parseAmount","dat","actual_open_amount","data","categories","console","log","options","chart","type","xAxis","tickColor","yAxis","visible","title","text","credits","enabled","plotOptions","series","pointWidth","point","events","click","select","tooltip","showInLegend","chartHeading","analyticsComp","highcharts","Highcharts","overflowY","maxHeight","SERVER_URL","callDummyAPI","name","axios","post","headers","params","desc","a","b","orderBy","rows","numeric","disablePadding","label","EnhancedTableHead","createSortHandler","property","event","onRequestSort","onSelectAllClick","order","numSelected","rowCount","padding","indeterminate","checked","onChange","row","key","pk_id","sortDirection","placement","enterDelay","active","direction","onClick","EnhancedTableToolbar","getAllSelected","reduce","genData","selected","indexOf","cust_payment_terms","actual_outstanding_amount","age_invoice","invoice_age","classNames","highlight","spacer","then","response","allPredictionID","m","index","predict","predictions","actual","predicted_type","predicted_amount","paddingRight","spacing","unit","secondary","lighten","flex","actions","MyTable","setState","persons","handleGetStarted","e","redirect","loading","handleRequestSort","handleSelectAllClick","target","n","handleClick","selectedIndex","newSelected","concat","slice","length","handleChangePage","page","handleChangeRowsPerPage","rowsPerPage","value","isSelected","emptyRows","Math","min","tableWrapper","table","aria-labelledby","array","cmp","stabilizedThis","el","sort","stableSort","getSorting","hover","role","aria-checked","tabIndex","component","scope","company_id","acct_doc_header_id","document_number","doctype","customer_number","fk_customer_map_id","customer_name","document_create_date","baseline_create_date","invoice_date_norm","invoice_id","total_open_amount","clearing_date","isOpen","ship_date","paid_amount","dayspast_due","document_id","invoice_amount_doc_currency","colSpan","rowsPerPageOptions","count","backIconButtonProps","nextIconButtonProps","onChangePage","onChangeRowsPerPage","marginTop","minWidth","overflowX","SearchPanelComponent","initializeTable","initTab","details","customerName","qstr","queryString","getSearchedResults","cusClicked","cusNum","secPage","styles","border","borderRadius","container","src","MagGlass","alt","tableBG","position","placeholder","onKeyPress","ev","preventDefault","tableRow","inputText","customer_number_norm","to","pathname","cusName","inputBG","Professor","setOpen","open","createMessage","message","document","createElement","innerHTML","margin","listStyleType","getElementById","appendChild","maxWidth","left","handleclick","inputval","trim","method","url","error","handleOpen","handleClose","borderLeft","borderTop","zIndex","right","bottom","overflow","fontWeight","top","cursor","marginLeft","Send","paddingTop","gutterBottom","Image","hideBackdrop","disableAutoFocus","onBackdropClick","CollectorDashboard","stats","getCompanies","companies","getSearchName","cusSearch","CompanyLogo","paddingLeft","paddingBottom","justify","ceil","minHeight","GridPanelComponent","dbParam","cust","ARStatsInit","ARStats","modifySelected","docType","actOpnAmt","pkId","actualOpenAmount","modifyAllowed","onPopUpCalled","onPopUpCollapsed","showPopUp","filename","disabled","onClose","varian","CustomerDetails","location","getSearchedName","searchedName","goBack","navBack","headerText","DetailedGridComponent","fill","App","basename","exact","path","outline","Boolean","window","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.1b3d2353.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mag-glass.9a910b43.svg\";","module.exports = __webpack_public_path__ + \"static/media/send-24px.77a51d72.svg\";","module.exports = __webpack_public_path__ + \"static/media/voiceIcon.62543aad.svg\";","module.exports = __webpack_public_path__ + \"static/media/companyLogo.593dca1a.svg\";","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\n\r\nexport const pxToRem = px => `${px / 22.5}rem`;\r\nexport const pxToVw = px =>\r\n  `${(100 / document.documentElement.clientWidth) * px}vw`;\r\n\r\nexport const pxToVh = px =>\r\n  `${px / (document.documentElement.clientHeight * 0.01)}vh`;\r\n\r\nexport default createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#1B1F38',\r\n      light: 'rgb(93,175,240,0.5)',\r\n      dark: 'rgb(93,175,240,0.2)'\r\n    }\r\n  }\r\n});\r\n","import React from 'react';\r\nimport { pxToRem } from '../utils/theme';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Typography, Grid } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n  mainBackground: {\r\n    background: theme.palette.primary.main,\r\n    height: '100vh',\r\n    width: '100vw'\r\n  },\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  paper: {\r\n    height: 140,\r\n    width: '100%',\r\n    background: '#252C48',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    flexDirection: 'column'\r\n  },\r\n  titleName: { fontSize: pxToRem(30), color: 'white' },\r\n  subTitleName: {\r\n    fontSize: pxToRem(20),\r\n    color: 'white'\r\n  }\r\n});\r\nfunction Footer(props) {\r\n  //const { classes } = props;\r\n  return (\r\n    <Grid\r\n      item\r\n      xs={12}\r\n      style={{\r\n        display: 'flex',\r\n        marginRight: '5px',\r\n        justifyContent: 'flex-end',\r\n        height: \"4.5vh\",\r\n        alignItems: \"flex-end\"\r\n      }}\r\n    >\r\n      <Typography style={{ color: 'white' }}>\r\n        Copyright 2020 Highradius. All Rights Reserved.\r\n      </Typography>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(Footer);\r\n","import React from 'react';\r\nimport { Grid } from '@material-ui/core';\r\nimport { Typography } from '@material-ui/core';\r\nimport { Card } from '@material-ui/core';\r\nimport { CardContent} from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles=(theme)=>({\r\n    body:{\r\n        backgroundColor:'#242C47',\r\n    },\r\n    textColorV:{\r\n        color:'#FFFFFF',\r\n    }  ,  \r\n    textColorH:{\r\n        color:'#878FA7',\r\n    }\r\n});\r\n\r\nclass ARStatsComponent extends React.Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state={\r\n            autoid:this.props.id,\r\n        };\r\n    }\r\n    render()\r\n    {\r\n        const {classes}=this.props;\r\n        return(\r\n            <Grid item xs={3}>\r\n                <Card className={classes.body}>\r\n                    <CardContent>\r\n                        <Typography variant='h6' align='center' className={classes.textColorH}>\r\n                            {this.props.cardTitle}\r\n                        </Typography>\r\n                        <Typography variant='h5' align='center' className={classes.textColorV}>\r\n                            {this.props.cardValue}\r\n                        </Typography>\r\n                    </CardContent>\r\n                </Card>\r\n            </Grid> \r\n        );\r\n    }\r\n}\r\nexport default withStyles(styles)(ARStatsComponent);","import React from 'react';\r\nimport { Grid } from '@material-ui/core';\r\nimport { Typography } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\n\r\nconst styles = (theme) => ({\r\n    analyticsComp:{\r\n      overflowY:'auto',\r\n      maxHeight:'207px'\r\n    },\r\n    chartHeading:{\r\n        color:'#FFFFFF'\r\n    }\r\n  });\r\n\r\n\r\n\r\nclass AnalyticsSecComponent extends React.Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state={\r\n            data:[],\r\n            categories:[],\r\n        };\r\n    };\r\n    parseCategories = () => {\r\n         var cat=[];\r\n         this.props.comp.map(d=>(\r\n            cat.push(d.business_code)\r\n         ));\r\n         return(cat)\r\n    }\r\n    parseAmount = () => {\r\n        var dat=[];\r\n        this.props.comp.map(d=>(\r\n           dat.push(d.actual_open_amount)\r\n        ));\r\n        return(dat)\r\n    }\r\n    render()\r\n    {\r\n        console.log(this.parseCategories());\r\n        const options={\r\n            chart: {\r\n                height: 1500,\r\n                type: 'bar',\r\n                backgroundColor: '#242C47',\r\n            },\r\n            xAxis:{\r\n                categories:this.parseCategories(),\r\n                tickColor:'#FFFFFF'\r\n            },\r\n            yAxis:{\r\n                visible:false\r\n            },\r\n            title: {\r\n                text: ''\r\n            },\r\n            credits:{\r\n                enabled:false\r\n            },\r\n            plotOptions:{\r\n                series:{\r\n                    pointWidth:20,\r\n                    point: {\r\n                        events: {\r\n                            click: function () {\r\n                                this.select(null,false);\r\n                            }\r\n                        }\r\n                    }\r\n                }   \r\n            },\r\n            tooltip: { \r\n                enabled: false \r\n            },\r\n            series: [{\r\n                showInLegend: false,\r\n                data: this.parseAmount()\r\n            }]\r\n        };\r\n        const {classes}=this.props;\r\n        return(\r\n            <Grid item xs={12} style={{background:'#242C47'}}>\r\n                <Typography variant='h6' align='center' className={classes.chartHeading}>\r\n                    Total Amount By Company Code\r\n                </Typography>\r\n                <div className={classes.analyticsComp} autoid='companycode-chart'>\r\n                    <HighchartsReact highcharts={Highcharts} options={options}/>\r\n                </div> \r\n            </Grid> \r\n        );\r\n    }\r\n}\r\nexport default withStyles(styles)(AnalyticsSecComponent);","export const SERVER_URL = 'http://localhost:8080/';\r\nexport const ROLL_NUMBER = '1705129';\r\n","import axios from 'axios';\r\nimport { SERVER_URL,ROLL_NUMBER } from '../utils/constants';\r\n\r\n\r\nexport function serviceCall() {\r\n  return axios.post(`${SERVER_URL}`);\r\n}\r\n\r\nexport function callDummyAPI(name) {\r\n  return axios.post(\r\n    `${SERVER_URL}${ROLL_NUMBER}/RecordsWebLoader.com`,\r\n    {},\r\n    {\r\n      headers: { 'Content-Type': 'application/json' },\r\n      params: { name: name },\r\n    }\r\n  );\r\n}\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { lighten } from '@material-ui/core/styles/colorManipulator';\r\nimport Button from '@material-ui/core/Button';\r\nimport {callPredictAPI} from '../services/Predict';\r\nimport { callDummyAPI } from '../services/services';\r\n\r\nfunction desc(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction stableSort(array, cmp) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = cmp(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n \r\nfunction getSorting(order, orderBy) {\r\n  return order === 'desc' ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\r\n}\r\n\r\nconst rows = [\r\n  { id: 'company_id', numeric: true, disablePadding: true, label: 'Company_ID' },\r\n  { id: 'acct_doc_header_id', numeric: true, disablePadding: false, label: ' Account Header ID' },\r\n  { id: 'document_number', numeric: true, disablePadding: false, label: 'Document Number' },\r\n  { id: 'business_code', numeric: false, disablePadding: false, label: 'BUsiness Code' },\r\n  { id: 'doc_type', numeric: false, disablePadding: false, label: 'Document Type' },\r\n  { id: 'customer_number', numeric: true, disablePadding: false, label: 'Customer Number' },\r\n  { id: 'fk_customer_map_id', numeric: true, disablePadding: false, label: 'Customer Map ID' },\r\n  { id: 'customer_name', numeric: false, disablePadding: false, label: 'Name of Customer' },\r\n  { id: 'document_create_date', numeric: false, disablePadding: false, label: 'Document Create Date' },\r\n  { id: 'baseline_create_date', numeric: false, disablePadding: false, label: 'Baseline Date' },\r\n  { id: 'invoice_date_norm', numeric: false, disablePadding: false, label: 'Invoice Date' },\r\n  { id: 'invoice_id', numeric: true, disablePadding: false, label: 'Invoice ID' },\r\n  { id: 'total_open_amount', numeric: true, disablePadding: false, label: 'Total Open Amount' },\r\n  { id: 'cust_payment_terms', numeric: true, disablePadding: false, label: 'Customer PAyment Terms' },\r\n  { id: 'clearing_date', numeric: false, disablePadding: false, label: 'Clear Date' },\r\n  { id: 'is_open', numeric: true, disablePadding: false, label: 'Is Open Invoice' },\r\n  { id: 'ship_date', numeric: false, disablePadding: false, label: 'Shipping Date' },\r\n  { id: 'paid_amount', numeric: true, disablePadding: false, label: 'Payment Amount' },\r\n  { id: 'dayspast_due', numeric: true, disablePadding: false, label: 'Days past Due date' },\r\n  { id: 'document_id', numeric: true, disablePadding: false, label: 'Doc id' },\r\n  { id: 'document_creation_date', numeric: true, disablePadding: false, label: 'Document Create Date' },\r\n  { id: 'actual_open_amount', numeric: true, disablePadding: false, label: 'Actual Amount Oustanding' },\r\n  { id: 'invoice_Age', numeric: true, disablePadding: false, label: 'Age of Invoice' },\r\n  { id: 'invoice_amount_doc_currency', numeric: true, disablePadding: false, label: 'Invoice Currency' },\r\n  { id: 'predict_type', numeric: true, disablePadding: false, label: 'Predicted Payment Type' },\r\n  { id: 'predict_amount', numeric: true, disablePadding: false, label: 'Predicted Amount' },\r\n\r\n\r\n\r\n];\r\n\r\nclass EnhancedTableHead extends React.Component {\r\n  createSortHandler = property => event => {\r\n    this.props.onRequestSort(event, property);\r\n  };\r\n\r\n  render() {\r\n    const { onSelectAllClick, order, orderBy, numSelected, rowCount } = this.props;\r\n\r\n    return (\r\n      <TableHead style={{ color: '#FFFFFF',backgroundColor:'#1B1F38' }}>\r\n        <TableRow>\r\n          <TableCell padding=\"checkbox\">\r\n            <Checkbox\r\n              indeterminate={numSelected > 0 && numSelected < rowCount}\r\n              checked={numSelected === rowCount}\r\n              onChange={onSelectAllClick}\r\n            />\r\n          </TableCell>\r\n          {rows.map(\r\n            row => (\r\n              <TableCell\r\n                style={{color:'white'}}\r\n                key={row.pk_id}\r\n                align={row.numeric ? 'right' : 'left'}\r\n                padding={row.disablePadding ? 'none' : 'default'}\r\n                sortDirection={orderBy === row.pk_id ? order : false}\r\n              >\r\n                <Tooltip\r\n                  title=\"Sort\"\r\n                  placement={row.numeric ? 'bottom-end' : 'bottom-start'}\r\n                  enterDelay={300}\r\n                >\r\n                  <TableSortLabel\r\n                    active={orderBy === row.pk_id}\r\n                    direction={order}\r\n                    onClick={this.createSortHandler(row.pk_id)}\r\n                  >\r\n                    {row.label}\r\n                  </TableSortLabel>\r\n                </Tooltip>\r\n              </TableCell>\r\n            ),\r\n            this,\r\n          )}\r\n        </TableRow>\r\n      </TableHead>\r\n    );\r\n  }\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.string.isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst toolbarStyles = theme => ({\r\n  root: {\r\n    paddingRight: theme.spacing.unit,\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  spacer: {\r\n    flex: '1 1 100%',\r\n  },\r\n  actions: {\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  title: {\r\n    flex: '0 0 auto',\r\n  },\r\n});\r\n\r\nlet EnhancedTableToolbar = props => {\r\n  const { numSelected, classes } = props;\r\n const isSelected = (id) => props.selected.indexOf(id) !== -1;\r\n  const getAllSelected = () =>\r\n    props.data.reduce((genData, d) => {\r\n      if (isSelected(d.pk_id))\r\n        genData.push({\r\n          pk_id: d.pk_id,\r\n          business_code: d.business_code,\r\n          cust_payment_terms: d.cust_payment_terms,\r\n          actual_outstanding_amount: d.actual_open_amount,\r\n          age_invoice: d.invoice_age,\r\n        });\r\n\r\n      return genData;\r\n    }, []);\r\n\r\n  const predict = () => {\r\n    callPredictAPI(getAllSelected()).then((response) => {\r\n      var allPredictionID = response.data.map((m) => m.pk_id);\r\n\r\n      var data = props.data.map((a) => {\r\n        var index = allPredictionID.indexOf(a.pk_id);\r\n\r\n        if (index !== -1) {\r\n          var predict = response.data[index].predictions;\r\n          var actual = response.data[index].actual_outstanding_amount;\r\n          a.predicted_type =\r\n            predict < actual ? \"Partial Payment\" : \"Full Payment\";\r\n\r\n          a.predicted_amount = predict < actual ? predict : actual;\r\n        }\r\n\r\n        return a;\r\n      });\r\n\r\n      props.predict(data);\r\n    });\r\n    console.log(getAllSelected());\r\n  };\r\n\r\n  return (\r\n    <Toolbar\r\n    style={{ color: 'white',backgroundColor:'#242C47' }}\r\n      className={classNames(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      <div className={classes.title}  style={{ color: 'white',backgroundColor:'#242C47' }}>\r\n        {numSelected > 0 ? (\r\n          <Typography color=\"inherit\" variant=\"subtitle1\">\r\n            {numSelected} selected\r\n          </Typography>\r\n        ) : (\r\n          <Typography variant=\"h6\" id=\"tableTitle\" style={{ color: '#FFFFFF',backgroundColor:'#242C47' }}>\r\n            Invoices\r\n          </Typography>\r\n        )}\r\n      </div>\r\n      <div className={classes.spacer} />\r\n      <div style={{background:'grey'}}>\r\n      <Button autoid='predict-button' onClick={predict} variant=\"outlined\" color='white'>Predict</Button> \r\n      </div>\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nEnhancedTableToolbar = withStyles(toolbarStyles)(EnhancedTableToolbar);\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing.unit * 3,\r\n  },\r\n  table: {\r\n    minWidth: 1020,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n});\r\n\r\nclass MyTable extends React.Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n           name: 'cusTab',\r\n          response: 0,\r\n          redirect: false,\r\n          loading: true,\r\n          persons :[],\r\n          order: 'asc',\r\n          orderBy: 'customer_number',\r\n          selected: [],\r\n          page: 0,\r\n          rowsPerPage: 5,\r\n\r\n\r\n        };\r\n     \r\n      }\r\n\r\n      predict=(data)=>{\r\n\r\n        this.setState({\r\n          persons:data,\r\n        })\r\n\r\n      }\r\n    \r\n    \r\n      handleGetStarted = (e) => {\r\n        callDummyAPI(this.state.name).then((response) => {\r\n          //});\r\n          console.log(response)\r\n          console.log(this.state.data)\r\n          this.setState({\r\n            persons: response.data,\r\n            redirect: true,\r\n            loading: false,\r\n          });\r\n        });\r\n      };\r\n    \r\n      componentDidMount() {\r\n    \r\n        if (this.state.loading === true) this.handleGetStarted();\r\n    \r\n      }\r\n\r\n\r\n  \r\n  handleRequestSort = (event, property) => {\r\n    const orderBy = property;\r\n    let order = 'desc';\r\n\r\n    if (this.state.orderBy === property && this.state.order === 'desc') {\r\n      order = 'asc';\r\n    }\r\n\r\n    this.setState({ order, orderBy });\r\n  };\r\n\r\n  handleSelectAllClick = event => {\r\n    if (event.target.checked) {\r\n      this.setState(state => ({ selected: state.persons.map(n => n.pk_id) }));\r\n      return;\r\n    }\r\n    this.setState({ selected: [] });\r\n  };\r\n\r\n  handleClick = (event, pk_id) => {\r\n    const { selected } = this.state;\r\n    const selectedIndex = selected.indexOf(pk_id);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, pk_id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    this.setState({ selected: newSelected });\r\n  };\r\n\r\n  handleChangePage = (event, page) => {\r\n    this.setState({ page });\r\n  };\r\n\r\n  handleChangeRowsPerPage = event => {\r\n    this.setState({ rowsPerPage: event.target.value });\r\n  };\r\n\r\n  isSelected = pk_id => this.state.selected.indexOf(pk_id) !== -1;\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { persons, order, orderBy, selected, rowsPerPage, page } = this.state;\r\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, persons.length - page * rowsPerPage);\r\n    return (\r\n      <Paper className={classes.root} style={{ color: 'white',backgroundColor:'#1B1F38' }}>\r\n        <EnhancedTableToolbar selected={selected} numSelected={selected.length}  data={this.state.persons} predict={this.predict} />\r\n        <div className={classes.tableWrapper}>\r\n          <Table className={classes.table} aria-labelledby=\"tableTitle\" autoid='invoice-table-collector'>\r\n            <EnhancedTableHead\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={this.handleSelectAllClick}\r\n              onRequestSort={this.handleRequestSort}\r\n              rowCount={persons.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(persons, getSorting(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map(n => {\r\n                  const isSelected = this.isSelected(n.pk_id);\r\n                  return (\r\n                    <TableRow\r\n                    style={{ color: 'white' }}\r\n                      hover\r\n                      onClick={event => this.handleClick(event, n.pk_id)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isSelected}\r\n                      tabIndex={-1}\r\n                      key={n.pk_id}\r\n                      selected={isSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox checked={isSelected} />\r\n                      </TableCell>\r\n                      <TableCell style={{color:'white'}} align='center' component=\"th\" scope=\"row\" padding=\"none\">\r\n                        {n.company_id}\r\n                      </TableCell >\r\n                      {/* <TableCell style={{color:'white'}} align=\"right\">{n.company_id}</TableCell> */}\r\n                      <TableCell style={{color:'white'}} align=\"right\">{n.acct_doc_header_id}</TableCell>\r\n                      <TableCell style={{color:'white'}} align=\"right\">{n.document_number}</TableCell>\r\n                      <TableCell style={{color:'white'}} align=\"left\">{n.business_code}</TableCell>\r\n                      <TableCell style={{color:'white'}} align=\"left\">{n.doctype}</TableCell>\r\n                      <TableCell style={{color:'white'}} align=\"right\">{n.customer_number}</TableCell>\r\n                      <TableCell style={{color:'white'}} align=\"right\">{n.fk_customer_map_id}</TableCell>\r\n                      <TableCell style={{color:'white'}} align=\"left\">{n.customer_name}</TableCell>\r\n                      <TableCell style={{color:'white'}} align=\"left\">{n.document_create_date}</TableCell>\r\n                      <TableCell style={{color:'white'}} align=\"right\">{n.baseline_create_date}</TableCell>\r\n                      <TableCell style={{color:'white'}} align=\"right\">{n.invoice_date_norm}</TableCell>\r\n                      <TableCell style={{color:'white'}} align=\"right\">{n.invoice_id}</TableCell>\r\n                      <TableCell style={{color:'white'}} align=\"right\">{n.total_open_amount}</TableCell>\r\n                      <TableCell style={{color:'white'}} align=\"right\">{n.cust_payment_terms}</TableCell>\r\n                      <TableCell style={{color:'white'}} align=\"right\">{n.clearing_date}</TableCell>\r\n                      <TableCell style={{color:'white'}} align=\"right\">{n.isOpen}</TableCell>\r\n                      <TableCell style={{color:'white'}} align=\"right\">{n.ship_date}</TableCell>\r\n                      <TableCell style={{color:'white'}} align=\"right\">{n.paid_amount}</TableCell>\r\n                      <TableCell style={{color:'white'}} align=\"right\">{n.dayspast_due}</TableCell>\r\n                      <TableCell style={{color:'white'}} align=\"right\">{n.document_id}</TableCell>\r\n                      <TableCell style={{color:'white'}} align=\"right\">{n.document_create_date}</TableCell>\r\n                      <TableCell style={{color:'white'}} align=\"right\">{n.actual_open_amount}</TableCell>\r\n                      <TableCell style={{color:'white'}} align=\"right\">{n.invoice_age}</TableCell>\r\n                      <TableCell style={{color:'white'}} align=\"right\">{n.invoice_amount_doc_currency}</TableCell>\r\n                      <TableCell style={{color:'white'}} align=\"right\">{n.predicted_type}</TableCell>\r\n                      <TableCell style={{color:'white'}} align=\"right\">{n.predicted_amount}</TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 49 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n        <TablePagination\r\n          autoid='invoice-table-pagination-collector'\r\n          style={{ color: 'white',backgroundColor:'#242C47' }}\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={persons.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          backIconButtonProps={{\r\n            'aria-label': 'Previous Page',\r\n            autoid:'pagination-button-previous-collector',\r\n          }}\r\n          nextIconButtonProps={{\r\n            'aria-label': 'Next Page',\r\n            autoid:'pagination-button-next-collector',\r\n          }}\r\n          onChangePage={this.handleChangePage}\r\n          onChangeRowsPerPage={this.handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\nMyTable.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(MyTable);","import axios from 'axios';\r\nexport function callPredictAPI(data) {\r\n    return axios.post(\r\n      \"http://127.0.0.1:5000/predict?\",\r\n      {},\r\n      {\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        params: {\r\n          data: {\r\n            id: \"1705129\",\r\n            data: data,\r\n          },\r\n        },\r\n      }\r\n    );\r\n  }","import React from 'react';\r\nimport { Grid } from '@material-ui/core';\r\nimport MagGlass from '../assets/mag-glass.svg';\r\nimport { getSearchedResults } from '../services/SearchedResults';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Paper } from '@material-ui/core';\r\nimport { Table } from '@material-ui/core';\r\nimport { TableHead } from '@material-ui/core';\r\nimport { TableRow } from '@material-ui/core';\r\nimport { TableCell } from '@material-ui/core';\r\nimport { TableBody } from '@material-ui/core';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { getAllCustomers } from '../services/AllCustomers';\r\n\r\nconst styles=(theme) =>({\r\n    tableBG:{\r\n        backgroundColor:'#242C47',\r\n    },\r\n    inputText:{\r\n        color:'white',\r\n    },\r\n    inputBG:{\r\n        backgroundColor:'#242C47',\r\n        border:'solid 2px #5daae0',\r\n        borderRadius:'50px',\r\n    },\r\n    hover:{\r\n        color:'#1ae342'\r\n    },\r\n    tableRow: {\r\n        \"&:hover\": {\r\n          backgroundColor: \"#1B1F38\"\r\n        }\r\n      },\r\n});\r\n\r\nclass SearchPanelComponent extends React.Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state={\r\n            response: 0,\r\n            redirect: false,\r\n            loading: true,\r\n            details:[],\r\n            cusClicked:\"\",\r\n            cusNum:\"\",\r\n            secPage:false,\r\n            name:\"searchCus\",\r\n            initTab:\"allCus\",\r\n          };\r\n    }    \r\n    componentWillMount()\r\n    {   \r\n        this.initializeTable();\r\n    }\r\n    initializeTable=()=>{\r\n        getAllCustomers(this.state.initTab).then((response)=>{\r\n          console.log(response)\r\n          this.setState({\r\n            details: response.data,\r\n            redirect: true,\r\n            loading: false,\r\n          });\r\n        });\r\n      };\r\n    handleClick = (event,customerName) => \r\n    {\r\n        console.log(customerName+\" Clicked\");\r\n        //<Route path=\"/customer-dashboard\" component={CustomerDetails} />\r\n    }\r\n    handleGetStarted=(qstr)=>{\r\n        getSearchedResults(this.state.name,qstr).then((response)=>{\r\n          console.log(response)\r\n          this.setState({\r\n            details: response.data,\r\n            redirect: true,\r\n            loading: false,\r\n          });\r\n        });\r\n      };\r\n\r\n    render()\r\n    {\r\n        console.log(this.state.details)\r\n        const {classes}=this.props;\r\n        return(\r\n            <Grid item xs={12} styles={{border: \"1px solid #00c0ff\", borderRadius:\"20px\", backgroundColor:\"#242C47\"}}>\r\n                <div styles={{border: \"1px solid #00c0ff\", borderRadius:\"20px\", backgroundColor:\"#242C47\"}}>\r\n                <Grid container direction='row' styles={{background:'#242C47'}}>\r\n                    <img src={MagGlass} alt='' autoid='search-icon'/>\r\n                    <Grid item xs={10}  className={classes.tableBG} styles={{background:'#242C47'}}>\r\n                        <input autoid='search-text-field'\r\n                        style={{width: \"95%\",position:\"relative\", marginTop:'7px',\r\n                        fontSize:\".8rem\", padding:'8px', backgroundColor: \"#242C47\", color: \"white\",}}\r\n                        placeholder=\"Search Customer by Customer Name or Number\"\r\n                        onKeyPress={(ev) => {\r\n                            if (ev.key === 'Enter') {\r\n                                console.log(ev.target.value+\" : Entered\");\r\n                                this.handleGetStarted(ev.target.value);\r\n                                ev.preventDefault();\r\n                            }\r\n                        }}></input>\r\n                    </Grid>\r\n                </Grid>\r\n                </div>\r\n                <Grid item xs={12} style={{overflowY : 'auto', maxHeight:200}}>\r\n                    {/* <Card styles={{ maxHeight: 270, \r\n                            width:'100%', \r\n                            overflowY:'auto',\r\n                            overflowX:'auto'}}>\r\n                        <CardContent> */}\r\n                            <Paper>\r\n                                <Table className={classes.tableRow}>\r\n                                    <TableHead>\r\n                                        <TableRow className={classes.tableBG}>\r\n                                            <TableCell align=\"left\" className={classes.inputText}>\r\n                                                Customer Name\r\n                                            </TableCell>\r\n                                            <TableCell align=\"right\" className={classes.inputText}>\r\n                                                Customer Number\r\n                                            </TableCell>\r\n                                            <TableCell align=\"right\" className={classes.inputText}>\r\n                                                Open Amount\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        \r\n                                        {this.state.details.map(row => (\r\n                                            <TableRow\r\n                                                hover\r\n                                                onClick={(e) => {this.setState({secPage : true,\r\n                                                    cusNum:row.customer_number_norm,\r\n                                                     cusClicked : row.customer_name})}}\r\n                                                className={classes.tableBG}>\r\n                                                <TableCell className={classes.inputText} align=\"left\">\r\n                                                    {row.customer_name}\r\n                                                </TableCell>\r\n                                                <TableCell className={classes.inputText} align=\"right\">\r\n                                                    {row.customer_number_norm}\r\n                                                </TableCell>\r\n                                                <TableCell className={classes.inputText} align=\"right\">\r\n                                                    {row.actual_open_amount}\r\n                                                </TableCell>\r\n                                            </TableRow> \r\n                                        ))}\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </Paper>\r\n                        {/* </CardContent>\r\n                    </Card> */}\r\n                </Grid>\r\n                {this.state.secPage === true && (\r\n                    <Redirect\r\n                        to={{\r\n                        pathname: '/customer-dashboard',\r\n                        state : { cusName : this.state.cusClicked,\r\n                                    cusNum: this.state.cusNum }\r\n                        }}\r\n                    />\r\n                )}\r\n            </Grid> \r\n        );\r\n    }\r\n}\r\nexport default withStyles(styles)(SearchPanelComponent);","import axios from 'axios';\r\nimport { SERVER_URL,ROLL_NUMBER } from '../utils/constants';\r\n\r\nexport function serviceCall() {\r\n  return axios.post(`${SERVER_URL}`);\r\n}\r\n\r\nexport function getAllCustomers(name) {\r\n  return axios.post(\r\n    `${SERVER_URL}${ROLL_NUMBER}/RecordsWebLoader.com`,\r\n    {},\r\n    {\r\n      headers: { 'Content-Type': 'application/json' },\r\n      params: { name: name },\r\n    }\r\n  );\r\n}\r\n","import axios from 'axios';\r\nimport { SERVER_URL,ROLL_NUMBER } from '../utils/constants';\r\n\r\n\r\nexport function serviceCall() {\r\n  return axios.post(`${SERVER_URL}`);\r\n}\r\n\r\nexport function getSearchedResults(name,qstr) {\r\n  return axios.post(\r\n    `${SERVER_URL}${ROLL_NUMBER}/RecordsWebLoader.com`,\r\n    {},\r\n    {\r\n      headers: { 'Content-Type': 'application/json' },\r\n      params: { name: name, queryString: qstr },\r\n    }\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\nimport Send from \"../assets/send-24px.svg\";\r\nimport Image from \"../assets/voiceIcon.svg\";\r\nimport Modal from '@material-ui/core/Modal';\r\nimport axios from 'axios';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nclass Professor extends Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state={\r\n      open:false,\r\n    }\r\n  }\r\n  setOpen=(a)=>{\r\n    this.setState({\r\n      open:a\r\n    })\r\n  }\r\n  createMessage=(data,type)=>{\r\n    if(type===0){\r\n      var message = document.createElement(\"LI\");\r\n      message.innerHTML = data;\r\n      message.autoid='human';\r\n      message.style.fontSize=\".8rem\";\r\n      message.style.margin=\"16px\";\r\n      message.style.listStyleType=\"none\";\r\n      message.style.justifyContent=\"flex-end\";\r\n      message.style.display=\"flex\";\r\n      message.style.color=\"white\";\r\n      document.getElementById(\"chat\").appendChild(message);\r\n    }else{\r\n      message = document.createElement(\"LI\");\r\n      message.innerHTML = data;\r\n      message.autoid='ai';\r\n      message.style.fontSize=\".8rem\";\r\n      message.style.margin=\"16px\";\r\n      message.style.maxWidth=\"60%\";\r\n      message.style.justifyContent=\"flex-start\";\r\n      message.style.display=\"flex\";\r\n      message.style.listStyleType=\"none\";\r\n      message.style.left=\"4px\";\r\n      message.style.color=\"white\";\r\n      document.getElementById(\"chat\").appendChild(message);\r\n    }\r\n  }\r\n\r\n\r\n\r\n    handleclick=()=>{\r\n    const inputval=document.getElementById(\"input\").value.trim();\r\n    document.getElementById(\"input\").value=\"\";\r\n    this.createMessage(inputval,0);\r\n\r\n\r\n    axios({\r\n      method: 'post',\r\n      url: 'http://localhost:4000/chat',\r\n      data: {\r\n        message: inputval,\r\n      }\r\n    }).then((response) => {\r\n      this.createMessage(response.data.message,1);\r\n\r\n    }, (error) => {\r\n      console.log(error);\r\n    });\r\n\r\n  }\r\n   handleOpen = () => {\r\n    this.setOpen(true);\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setOpen(false);\r\n  };\r\n\r\n   body = (\r\n    <div   id=\"cross\" style={{height: \"94%\",backgroundColor:\"rgba(27,31,56,1)\",borderLeft: \"1px solid orange\",borderTop: \"1px solid orange\", width:\"300px\", zIndex:5,position:\"absolute\",right:\"0px\",bottom:\"0px\",overflow:\"hidden\"}}>\r\n    <h1 style={{color:\"rgba(255,255,255,.8)\", fontSize: \"1rem\", padding:\"8px\",fontWeight:\"normal\"}}>PROFESSOR</h1>\r\n    <span style={{color:\"white\", position:\"absolute\", right: \"40px\", top:\"2px\", fontWeight:\"bold\", cursor:\"pointer\",fontSize:\"2rem\"}} onClick={this.handleClose}>-</span>\r\n    <span autoid='professor-close-button' style={{color:\"white\", position:\"absolute\", right: \"16px\", top:\"16px\", fontWeight:\"bold\", cursor:\"pointer\"}} onClick={this.handleClose}>X</span>\r\n\r\n    <div id=\"chat\" style={{display:\"flex\",flexDirection:\"column\",width:\"95%\",height:\"75%\", padding:\"8px\", position:\"relative\", overflowY:\"auto\", overflowX:\"hidden\"}}>\r\n\r\n    </div>\r\n    <input \r\n            autoid='professor-input-box'\r\n            onKeyPress={(ev) => {\r\n              if (ev.key === 'Enter') {\r\n                  console.log(ev.target.value);\r\n                  ev.preventDefault();\r\n                  this.handleclick();       \r\n              }}}\r\n    id=\"input\" type=\"text\" style={{width: \"90%\",position:\"relative\",marginTop:\".5rem\",marginLeft: \"8px\",\r\n fontSize:\".8rem\", padding: \"8px\", backgroundColor: \"rgba(27,31,56,.9)\", color: \"white\",\r\n }} placeholder=\"Type here...\">\r\n </input>\r\n <img onClick={this.handleclick} autoid='professor-send-button'\r\n  src={Send} alt=\"Send\" style={{width: \"8%\", position:\"absolute\", right:\"8px\", bottom:\"24px\", cursor:\"pointer\"}}></img>\r\n  </div>\r\n  );\r\n  render(){\r\n    return (\r\n      <div>\r\n           <div onClick={this.handleOpen} style={{backgroundColor:'#FC7500', padding:'1px 0px 1px 10px',marginTop:'10px',borderRadius:'50px'}}>\r\n             <div style={{display: 'flex', flexDirection: 'row'}}>\r\n               <div autoid=\"professor-button\" style={{paddingTop:'10px', paddingRight:'2px'}}>\r\n             <Typography variant='subtitle1' align='inherit' gutterBottom style={{ color: 'White'}}>\r\n                PROFESSOR\r\n              </Typography></div>\r\n              <img src={Image} alt=''/>\r\n              </div>\r\n             </div>\r\n          <Modal\r\n          open={this.state.open}\r\n          hideBackdrop={true}\r\n          disableAutoFocus={true}\r\n          onBackdropClick={true}\r\n  >\r\n          {this.body}\r\n        </Modal>\r\n      </div>\r\n    ); \r\n  }\r\n}\r\nexport default Professor;","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Grid, Card, Typography } from '@material-ui/core';\r\nimport Footer from '../components/Footer';\r\nimport ARStatsComponent from '../components/ARStatsComponent';\r\nimport AnalyticsSecComponent from '../components/AnalyticsSecComponent';\r\nimport GridPanelComponent from '../components/GridPanelComponent';\r\nimport SearchPanelComponent from '../components/SearchPanelComponent';\r\nimport Professor from '../components/ChatBot';\r\nimport CompanyLogo from '../assets/companyLogo.svg';\r\nimport { getAllCompany } from '../services/AllCompany';\r\nimport { callDummyAPI } from '../services/services';\r\nconst styles = (theme) => ({\r\n  analyticsComp:{\r\n    minHeight:'350px',\r\n  },\r\n});\r\nclass CollectorDashboard extends Component {\r\n  constructor(props)\r\n  {\r\n    super(props);\r\n    this.state={\r\n      response: 0,\r\n      redirect: false,\r\n      loading: true,\r\n      stats:[],\r\n      companies:[],\r\n      name:\"ARStats\",\r\n      cusSearch:\"\"\r\n    };\r\n  }\r\n  handleGetStarted=(e)=>{\r\n    callDummyAPI(this.state.name).then((response)=>{\r\n      console.log(response)\r\n      this.setState({\r\n        stats: response.data,\r\n        redirect: true,\r\n        loading: false,\r\n      });\r\n    });\r\n  };\r\n  \r\n  getCompanies=(e)=>{\r\n    getAllCompany(\"allComp\").then((response)=>{\r\n      console.log(response)\r\n      this.setState({\r\n        companies: response.data,\r\n        redirect: true,\r\n        loading: false,\r\n      });\r\n    }); \r\n  };\r\n\r\n  componentWillMount(){\r\n    if(this.state.loading===true) \r\n    {\r\n      this.handleGetStarted();\r\n      this.getCompanies();\r\n    }\r\n    //console.log(\"Heloo\");\r\n  }\r\n  getSearchName=(cusName)=>{\r\n    this.setState({cusSearch:cusName})\r\n    console.log(\"received from search component -- \"+cusName)\r\n\r\n  }\r\n  render()\r\n  {\r\n    //console.log(this.state.stats)\r\n    //console.log(this.state.companies)\r\n    return(\r\n      <Grid container spacing={4} direction=\"column\">\r\n        <Grid container direction='row'>\r\n          <img src={CompanyLogo} alt=''/>\r\n          <Grid item xs={3}>\r\n            <div style={{ fontWeight:'900', color:'#FFFFFF', fontSize:'2rem', paddingTop:'11px', paddingLeft: '1vw'}}>\r\n              ABC Products\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n          <Card style={{ marginLeft:'200px', width :150 ,maxHeight:30,paddingLeft:'5px',backgroundColor:'#FC7500'}}>\r\n                \r\n                <Typography gutterBottom style={{ color: 'White'}}> \r\n                 Recievable Dashboard\r\n             </Typography>\r\n       \r\n        </Card>\r\n          </Grid>\r\n          <div style={{paddingLeft:'8vw', paddingBottom:'10px'}}>\r\n          <Professor/>\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Grid container spacing={8} direction=\"row\" alignItems=\"center\" justify='space-evenly'>\r\n            <ARStatsComponent cardTitle=\"Total Customer\" cardValue={this.state.stats['totCus']} id='total-customers-text-collector' />\r\n            <ARStatsComponent cardTitle=\"Total Open AR\" cardValue={'$'+Math.ceil(this.state.stats['totOpenAR']/1000000)+'M'} id='total-open-ar-text-collector' />\r\n            <ARStatsComponent cardTitle=\"Average Days Delay\" cardValue={this.state.stats['dayDel']} id='average-days-delay-text-collector' />\r\n            <ARStatsComponent cardTitle=\"Total Open Invoices\" cardValue={this.state.stats['openInv']} id='total-open-invoice-text-collector' />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Grid container spacing={8} direction='row'>\r\n            <Grid item xs={4}>\r\n              <Grid container spacing={8} direction='column'>\r\n                  <AnalyticsSecComponent comp={this.state.companies}\r\n                   styles={{ maxHeight: 270, \r\n                    width:'100%', \r\n                    overflowY:'auto',\r\n                    overflowX:'auto'}}/>\r\n\r\n                  <SearchPanelComponent \r\n                    styles={{ maxHeight: 270, \r\n                            width:'100%', \r\n                            overflowY:'auto',\r\n                            overflowX:'auto',}}\r\n                  />\r\n              </Grid>\r\n            </Grid>      \r\n            <Grid item xs={8}>\r\n              <Grid item xs={12} style={{overflowY : 'auto', minHeight:'480px',maxHeight:'480px'}}>\r\n                    <GridPanelComponent dbParam=\"cusTab\"/>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Footer/>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(CollectorDashboard);\r\n","import axios from 'axios';\r\nimport { SERVER_URL,ROLL_NUMBER } from '../utils/constants';\r\n\r\nexport function serviceCall() {\r\n  return axios.post(`${SERVER_URL}`);\r\n}\r\n\r\nexport function getAllCompany(name) {\r\n  return axios.post(\r\n    `${SERVER_URL}${ROLL_NUMBER}/RecordsWebLoader.com`,\r\n    {},\r\n    {\r\n      headers: { 'Content-Type': 'application/json' },\r\n      params: { name: name },\r\n    }\r\n  );\r\n}\r\n","import axios from 'axios';\r\nimport { SERVER_URL,ROLL_NUMBER } from '../utils/constants';\r\n\r\n\r\nexport function serviceCall() {\r\n  return axios.post(`${SERVER_URL}`);\r\n}\r\n\r\nexport function getSearchedResults(name,qstr) {\r\n  return axios.post(\r\n    `${SERVER_URL}${ROLL_NUMBER}/RecordsWebLoader.com`,\r\n    {},\r\n    {\r\n      headers: { 'Content-Type': 'application/json' },\r\n      params: { name: name, queryString: qstr },\r\n    }\r\n  );\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport {Button} from '@material-ui/core';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nimport { modifyRecord } from '../services/ModifyRecord';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nimport {Grid} from '@material-ui/core';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport { TextField } from '@material-ui/core';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\n\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport {CSVLink} from 'react-csv';\r\n\r\nimport { getCusARStats } from '../services/CustomerARStats';\r\nimport { lighten } from '@material-ui/core/styles/colorManipulator';\r\nimport { getSearchedResults } from '../services/searchedCustomer';\r\nimport { Card, CardContent } from '@material-ui/core';\r\n\r\n\r\nfunction desc(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction stableSort(array, cmp) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = cmp(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nfunction getSorting(order, orderBy) {\r\n  return order === 'desc' ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\r\n}\r\n\r\nconst rows = [\r\n  { id: 'company_id', numeric: true, disablePadding: true, label: 'Company_ID' },\r\n  { id: 'acct_doc_header_id', numeric: true, disablePadding: false, label: ' Account Header ID' },\r\n  { id: 'document_number', numeric: true, disablePadding: false, label: 'Document Number' },\r\n  { id: 'business_code', numeric: false, disablePadding: false, label: 'Business Code' },\r\n  { id: 'doc_type', numeric: false, disablePadding: false, label: 'Document Type' },\r\n  { id: 'customer_number', numeric: true, disablePadding: false, label: 'Customer Number' },\r\n  { id: 'fk_customer_map_id', numeric: true, disablePadding: false, label: 'Customer Map ID' },\r\n  { id: 'customer_name', numeric: false, disablePadding: false, label: 'Name of Customer' },\r\n  { id: 'document_create_date', numeric: false, disablePadding: false, label: 'Document Create Date' },\r\n  { id: 'baseline_create_date', numeric: false, disablePadding: false, label: 'Baseline Date' },\r\n  { id: 'invoice_date_norm', numeric: false, disablePadding: false, label: 'Invoice Date' },\r\n  { id: 'invoice_id', numeric: true, disablePadding: false, label: 'Invoice ID' },\r\n  { id: 'total_open_amount', numeric: true, disablePadding: false, label: 'Total Open Amount' },\r\n  { id: 'cust_payment_terms', numeric: true, disablePadding: false, label: 'Customer PAyment Terms' },\r\n  { id: 'clearing_date', numeric: false, disablePadding: false, label: 'Clear Date' },\r\n  { id: 'is_open', numeric: true, disablePadding: false, label: 'Is Open Invoice' },\r\n  { id: 'ship_date', numeric: false, disablePadding: false, label: 'Shipping Date' },\r\n  { id: 'paid_amount', numeric: true, disablePadding: false, label: 'Payment Amount' },\r\n  { id: 'dayspast_due', numeric: true, disablePadding: false, label: 'Days past Due date' },\r\n  { id: 'document_id', numeric: true, disablePadding: false, label: 'Doc id' },\r\n  { id: 'document_creation_date', numeric: true, disablePadding: false, label: 'Document Create Date' },\r\n  { id: 'actual_open_amount', numeric: true, disablePadding: false, label: 'Actual Open Amount' },\r\n  { id: 'invoice_Age', numeric: true, disablePadding: false, label: 'Invoice Age' },\r\n  { id: 'invoice_amount_doc_currency', numeric: true, disablePadding: false, label: 'Invoice Currency' },\r\n  { id: 'predict_type', numeric: true, disablePadding: false, label: 'Predicted Payment Type' },\r\n  { id: 'predict_amount', numeric: true, disablePadding: false, label: 'Predicted Amount' },\r\n\r\n\r\n\r\n];\r\n\r\nclass EnhancedTableHead extends React.Component {\r\n  createSortHandler = property => event => {\r\n    this.props.onRequestSort(event, property);\r\n  };\r\n\r\n  render() {\r\n    const { onSelectAllClick, order, orderBy, numSelected, rowCount } = this.props;\r\n\r\n    return (\r\n      <TableHead style={{ color: 'grey',backgroundColor:'#242C47' }}>\r\n        <TableRow>\r\n          <TableCell padding=\"checkbox\">\r\n            <Checkbox\r\n              indeterminate={numSelected > 0 && numSelected < rowCount}\r\n              checked={numSelected === rowCount}\r\n              onChange={onSelectAllClick}\r\n            />\r\n          </TableCell>\r\n          {rows.map(\r\n            row => (\r\n              <TableCell style={{color:'white'}}\r\n                key={row.pk_id}\r\n                align={row.numeric ? 'right' : 'left'}\r\n                padding={row.disablePadding ? 'none' : 'default'}\r\n                sortDirection={orderBy === row.pk_id ? order : false}\r\n              >\r\n                <Tooltip\r\n                  title=\"Sort\"\r\n                  placement={row.numeric ? 'bottom-end' : 'bottom-start'}\r\n                  enterDelay={300}\r\n                >\r\n                  <TableSortLabel\r\n                    active={orderBy === row.pk_id}\r\n                    direction={order}\r\n                    onClick={this.createSortHandler(row.pk_id)}\r\n                  >\r\n                    {row.label}\r\n                  </TableSortLabel>\r\n                </Tooltip>\r\n              </TableCell>\r\n            ),\r\n            this,\r\n          )}\r\n        </TableRow>\r\n      </TableHead>\r\n    );\r\n  }\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.string.isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst toolbarStyles = theme => ({\r\n  root: {\r\n    paddingRight: theme.spacing.unit,\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  spacer: {\r\n    flex: '1 1 100%',\r\n  },\r\n  actions: {\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  title: {\r\n    flex: '0 0 auto',\r\n  },\r\n});\r\n\r\nlet EnhancedTableToolbar = props => {\r\n\r\n  return (\r\n    <Toolbar style={{ color: 'grey',backgroundColor:'#D7DEE4' }}>\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nEnhancedTableToolbar = withStyles(toolbarStyles)(EnhancedTableToolbar);\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing.unit * 3,\r\n  },\r\n  table: {\r\n    minWidth: 1020,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n  body:{\r\n    backgroundColor:'#242C47',\r\n},\r\ntextColorV:{\r\n    color:'#FFFFFF',\r\n}  ,  \r\ntextColorH:{\r\n    color:'#878FA7',\r\n}\r\n});\r\n\r\nclass MyTable extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n           name: 'getCusDet',\r\n          response: 0,\r\n          redirect: false,\r\n          loading: true,\r\n          persons :[],\r\n          order: 'asc',\r\n          orderBy: 'customer_number',\r\n          selected: [],\r\n          docType : '',\r\n          actOpnAmt : '',\r\n          page: 0,\r\n          rowsPerPage: 5,\r\n          showPopUp:false,\r\n          modifyAllowed:true,\r\n          ARStats:[],\r\n        };\r\n      }\r\n      handleGetStarted = (e) => {\r\n        getSearchedResults(this.state.name,this.props.cust).then((response) => {\r\n          console.log(response)\r\n          this.setState({\r\n            persons: response.data,\r\n            redirect: true,\r\n            loading: false,\r\n          });\r\n        });\r\n      };\r\n      ARStatsInit = (e) => {\r\n        getCusARStats(\"cusARStats\",this.props.cust).then((response) => {\r\n          console.log(response)\r\n          this.setState({\r\n            ARStats: response.data,\r\n            redirect: true,\r\n            loading: false,\r\n          });\r\n        });\r\n      };\r\n      \r\n      modifySelected = (e) => {\r\n        if(this.state.docType.length!==0 && this.state.actOpnAmt.length!==0){\r\n        modifyRecord('modify',this.state.docType,this.state.actOpnAmt,\r\n        this.state.selected[0],this.props.cust).then((response) => {\r\n          console.log(response)\r\n          console.log(this.state.data)\r\n          this.setState({\r\n            persons:response.data,\r\n            redirect: true,\r\n            loading: false,\r\n          });\r\n        });} \r\n      };\r\n    \r\n      componentDidMount() {\r\n    \r\n        if (this.state.loading === true) \r\n        {\r\n          this.handleGetStarted();\r\n          this.ARStatsInit();\r\n        }\r\n      }\r\n\r\n  \r\n  handleRequestSort = (event, property) => {\r\n    const orderBy = property;\r\n    let order = 'desc';\r\n\r\n    if (this.state.orderBy === property && this.state.order === 'desc') {\r\n      order = 'asc';\r\n    }\r\n\r\n    this.setState({ order, orderBy });\r\n  };\r\n\r\n  handleSelectAllClick = event => {\r\n    if (event.target.checked) {\r\n      this.setState(state => ({ selected: state.persons.map(n => n.id) }));\r\n      return;\r\n    }\r\n    this.setState({ selected: [] });\r\n  };\r\n\r\n  handleClick = (event, pk_id) => {\r\n    const { selected } = this.state;\r\n    const selectedIndex = selected.indexOf(pk_id);\r\n    let newSelected = [];\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, pk_id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );}\r\n    this.setState({ selected: newSelected });\r\n    if(newSelected.length===1){\r\n      console.log(newSelected)\r\n      this.setState({  modifyAllowed:false  });\r\n    }\r\n    if(newSelected.length!==1){\r\n      console.log(\"Bye\")\r\n      this.setState({  modifyAllowed:true  });\r\n    }\r\n  };\r\n\r\n   onPopUpCalled=()=>{\r\n     this.setState({onPopUpCalled:true});\r\n   }\r\n   onPopUpCollapsed=()=>{\r\n    this.setState({onPopUpCalled:false});\r\n  }\r\n\r\n  handleChangePage = (event, page) => {\r\n    this.setState({ page });\r\n  };\r\n\r\n  handleChangeRowsPerPage = event => {\r\n    this.setState({ rowsPerPage: event.target.value });\r\n  };\r\n\r\n  isSelected = pk_id => this.state.selected.indexOf(pk_id) !== -1;\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { persons, order, orderBy, selected, rowsPerPage, page } = this.state;\r\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, persons.length - page * rowsPerPage);\r\n    return (\r\n      <Paper className={classes.root}>\r\n              <Card className={classes.body}>\r\n                <Grid container spacing={4} direction=\"row\">\r\n                        <Grid item xs={1}>\r\n                            <CSVLink data={this.state.persons} filename='1705129_exportedData.csv'>\r\n                                <Button autoid='export-button' variant=\"outlined\" style={{backgroundColor:'grey'}}>Export</Button>\r\n                            </CSVLink>\r\n                        </Grid>\r\n                        <Grid item xs={1}>\r\n                          <div>\r\n                            <Button autoid='modify-button'\r\n                            disabled={this.state.modifyAllowed} style={{backgroundColor:'grey'}}\r\n                              variant=\"outlined\" onClick={(e)=> this.setState({showPopUp:true}) }>\r\n                              Modify\r\n                            </Button>\r\n                            <Dialog open={this.state.showPopUp} onClose={(e)=> this.setState({showPopUp:false})}>\r\n                              <DialogTitle>Modify</DialogTitle>\r\n                                <DialogContent>\r\n                                  <Grid container direction='row'>\r\n                                    <Typography varian='h6' align='center' >\r\n                                      Open Amount ($)&nbsp;&nbsp;\r\n                                    </Typography>\r\n                                    <TextField autoid='open-amount-input' onChange={(e)=> {this.setState({actOpnAmt:e.target.value})}}/>\r\n                                  </Grid>\r\n                                  <Grid container direction='row'>\r\n                                    <Typography varian='h6' align='center'>\r\n                                      Document Type &nbsp;&nbsp;\r\n                                    </Typography>\r\n                                    <TextField autoid='doctype-input' onChange={(e)=> {this.setState({docType:e.target.value})}}/>\r\n                                  </Grid>\r\n                                </DialogContent>\r\n                                <DialogActions>\r\n                                  <Button autoid='modify-cancel-button' variant='outlined' onClick={(e)=> this.setState({showPopUp:false})}>\r\n                                    Cancel\r\n                                  </Button>\r\n                                  <Button autoid='modify-save-button' variant='contained' \r\n                                  onClick={(e)=>{\r\n                                    this.modifySelected(e);\r\n                                    this.setState({showPopUp:false});\r\n                                    // this.handleGetStarted(e);\r\n                                  }\r\n                                  }>\r\n                                    Save\r\n                                  </Button>\r\n                                </DialogActions>\r\n                              </Dialog>\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item xs={4}></Grid>\r\n                        <Grid item xs={2}>\r\n                                <Card className={classes.body} autoid='total-open-amount-customer'><CardContent>\r\n                                          <Typography variant='h6' align='center' className={classes.textColorV}>\r\n                                            {this.state.ARStats['totOpenAR']}\r\n                                            </Typography> \r\n                                        <Typography variant='subtitle1' align='center' className={classes.textColorH}>\r\n                                          Total Open Amount\r\n                                          </Typography>\r\n                                </CardContent></Card>\r\n                         </Grid>        \r\n                         <Grid item xs={2}>\r\n                                <Card className={classes.body} autoid='total-open-invoices-customer'><CardContent>\r\n                                        <Typography variant='h6' align='center' className={classes.textColorV}>\r\n                                          {this.state.ARStats['openInv']}\r\n                                          </Typography> \r\n                                        <Typography variant='subtitle1' align='center' className={classes.textColorH}>\r\n                                          Total Open Invoices\r\n                                          </Typography>\r\n                                </CardContent></Card>\r\n                        </Grid>\r\n                        <Grid item xs={2}>\r\n                                <Card className={classes.body}><CardContent>\r\n                                        <Typography variant='h6' align='center' className={classes.textColorV}>\r\n                                          $12.M\r\n                                          </Typography> \r\n                                        <Typography variant='subtitle1' align='center' className={classes.textColorH}>\r\n                                          Predicted Amount\r\n                                        </Typography>\r\n                                </CardContent></Card>\r\n                        </Grid>\r\n                </Grid>\r\n              </Card>\r\n        <div className={classes.tableWrapper}>\r\n          <Table autoid='invoice-table-customer' className={classes.table} aria-labelledby=\"tableTitle\">\r\n            <EnhancedTableHead\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={this.handleSelectAllClick}\r\n              onRequestSort={this.handleRequestSort}\r\n              rowCount={persons.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(persons, getSorting(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map(n => {\r\n                  const isSelected = this.isSelected(n.pk_id);\r\n                  return (\r\n                    <TableRow\r\n                    style={{ color: 'white' }}\r\n                      hover\r\n                      onClick={event => this.handleClick(event, n.pk_id)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isSelected}\r\n                      tabIndex={-1}\r\n                      key={n.pk_id}\r\n                      selected={isSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox checked={isSelected} />\r\n                      </TableCell>\r\n                      <TableCell align='center' component=\"th\" scope=\"row\" padding=\"none\">\r\n                        {n.company_id}\r\n                      </TableCell >\r\n                      {/* <TableCell color='white' align=\"right\">{n.company_id}</TableCell> */}\r\n                      <TableCell color='white' align=\"right\">{n.acct_doc_header_id}</TableCell>\r\n                      <TableCell color='white' align=\"right\">{n.document_number}</TableCell>\r\n                      <TableCell color='white' align=\"left\">{n.business_code}</TableCell>\r\n                      <TableCell color='white' align=\"left\">{n.doctype}</TableCell>\r\n                      <TableCell color='white' align=\"right\">{n.customer_number}</TableCell>\r\n                      <TableCell color='white' align=\"right\">{n.fk_customer_map_id}</TableCell>\r\n                      <TableCell color='white' align=\"left\">{n.customer_name}</TableCell>\r\n                      <TableCell color='white' align=\"left\">{n.document_create_date}</TableCell>\r\n                      <TableCell color='white' align=\"right\">{n.baseline_create_date}</TableCell>\r\n                      <TableCell color='white' align=\"right\">{n.invoice_date_norm}</TableCell>\r\n                      <TableCell color='white' align=\"right\">{n.invoice_id}</TableCell>\r\n                      <TableCell color='white' align=\"right\">{n.total_open_amount}</TableCell>\r\n                      <TableCell color='white' align=\"right\">{n.cust_payment_terms}</TableCell>\r\n                      <TableCell color='white' align=\"right\">{n.clearing_date}</TableCell>\r\n                      <TableCell color='white' align=\"right\">{n.isOpen}</TableCell>\r\n                      <TableCell color='white' align=\"right\">{n.ship_date}</TableCell>\r\n                      <TableCell color='white' align=\"right\">{n.paid_amount}</TableCell>\r\n                      <TableCell color='white' align=\"right\">{n.dayspast_due}</TableCell>\r\n                      <TableCell color='white' align=\"right\">{n.document_id}</TableCell>\r\n                      <TableCell color='white' align=\"right\">{n.document_create_date}</TableCell>\r\n                      <TableCell color='white' align=\"right\">{n.actual_open_amount}</TableCell>\r\n                      <TableCell color='white' align=\"right\">{n.invoice_age}</TableCell>\r\n                      <TableCell color='white' align=\"right\">{n.invoice_amount_doc_currency}</TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 49 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n        <TablePagination\r\n            autoid='invoice-table-pagination-customer'\r\n            style={{}}\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={persons.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          backIconButtonProps={{\r\n            'aria-label': 'Previous Page',\r\n            autoid:'pagination-button-previous-customer'\r\n          }}\r\n          nextIconButtonProps={{\r\n            'aria-label': 'Next Page',\r\n            autoid:'pagination-button-next-customer'\r\n          }}\r\n          onChangePage={this.handleChangePage}\r\n          onChangeRowsPerPage={this.handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\nMyTable.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(MyTable);\r\n","import axios from 'axios';\r\nimport { SERVER_URL,ROLL_NUMBER } from '../utils/constants';\r\n\r\nexport function serviceCall() {\r\n  return axios.post(`${SERVER_URL}`);\r\n}\r\n\r\nexport function getCusARStats(name,cusName) {\r\n  return axios.post(\r\n    `${SERVER_URL}${ROLL_NUMBER}/RecordsWebLoader.com`,\r\n    {},\r\n    {\r\n      headers: { 'Content-Type': 'application/json' },\r\n      params: { name: name, \r\n                cusName : cusName\r\n        },\r\n    }\r\n  );\r\n}\r\n","import axios from 'axios';\r\nimport { SERVER_URL,ROLL_NUMBER } from '../utils/constants';\r\n\r\nexport function serviceCall() {\r\n  return axios.post(`${SERVER_URL}`);\r\n}\r\n\r\nexport function modifyRecord(name,docType,actOpnAmt,pkId,cusName) {\r\n  return axios.post(\r\n    `${SERVER_URL}${ROLL_NUMBER}/RecordsWebLoader.com`,\r\n    {},\r\n    {\r\n      headers: { 'Content-Type': 'application/json' },\r\n      params: { name: name,\r\n                docType : docType,\r\n                actualOpenAmount : actOpnAmt,\r\n                pkId : pkId,\r\n                cusName : cusName\r\n              },\r\n    }\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Grid, Card } from '@material-ui/core';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport Footer from '../components/Footer';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { getSearchedResults } from '../services/searchedCustomer';\r\nimport DetailedGridComponent from '../components/DetailedGridComponent';\r\nimport { IconButton, Typography } from '@material-ui/core';\r\nimport Professor from '../components/ChatBot';\r\n\r\n\r\nconst styles = (theme) => ({\r\n  navBack:{\r\n    fill:'#FFFFFF',\r\n    width: 30,\r\n    height: 30,\r\n  },\r\n  headerText:{\r\n    color:'#FFFFFF'\r\n  }\r\n});\r\n\r\nclass CustomerDetails extends Component \r\n{\r\n  constructor(props) \r\n  {\r\n    super(props);\r\n    this.state = {\r\n      searchedName:\"\",\r\n      response: 0,\r\n      redirect: false,\r\n      loading: true,\r\n      details:[],\r\n      name:\"getCusDet\",\r\n      goBack:false,\r\n    };\r\n  }\r\n  initializeTable=()=>{\r\n    getSearchedResults(this.props.location.state.cusName).then((response)=>{\r\n      console.log(response)\r\n      this.setState({\r\n        details: response.data,\r\n        redirect: true,\r\n        loading: false,\r\n      });\r\n    });\r\n  };\r\n  componentWillMount() \r\n  {\r\n      this.initializeTable();\r\n  }\r\n  getSearchedName=()=>{\r\n  \r\n  }\r\n  render() {\r\n    const { classes } = this.props;\r\n    //var x=this.props.location.query;\r\n    //x['xyz']=\"abc\";\r\n    //this.setState({searchedName:this.props.location.query['name']});\r\n    console.log(\"Mehmaan humare : \"+this.props.location.state.cusName);\r\n    //this.getSearchedName();\r\n    return (\r\n        <Grid container spacing={4}>\r\n          <Grid item xs={12}>\r\n            <Grid container direction='row'>\r\n              <IconButton autoid='navigation-back-button'\r\n              onClick={\r\n                (e)=>{this.setState({goBack:true})}}\r\n              >\r\n                <ArrowBackIcon className={classes.navBack}/>\r\n              </IconButton>\r\n              <Grid item xs={2}>\r\n                <div autoid='customer-name'>\r\n                <Typography variant='h5' className={classes.headerText}>\r\n                  {this.props.location.state.cusName}\r\n                </Typography>\r\n                </div>\r\n                <div autoid='customer-number'>\r\n                <Typography variant='subtitle2' className={classes.headerText}>\r\n                {this.props.location.state.cusNum}\r\n                </Typography>\r\n                </div>\r\n              </Grid>\r\n              <Grid item xs={7}>\r\n              <Card style={{ marginLeft:'290px', width :150 ,maxHeight:30,paddingLeft:'5px',backgroundColor:'#FC7500'}}>\r\n                \r\n                <Typography gutterBottom style={{ color: 'White'}}> \r\n                  Recievable Dashboard\r\n                </Typography>\r\n       \r\n                </Card>\r\n              </Grid>\r\n              <div style={{paddingLeft:'8vw', paddingBottom:'10px'}}>\r\n                <Professor/>\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={12} style={{overflowY : 'auto', minHeight:'600px',maxHeight:'600px'}}>\r\n            <DetailedGridComponent cust={this.props.location.state.cusName}/>\r\n          </Grid>\r\n          <Footer/>\r\n          {this.state.goBack === true && (\r\n          <Redirect\r\n            to={{\r\n              pathname: '/',\r\n            }}\r\n          />\r\n        )}\r\n        </Grid>\r\n      );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(CustomerDetails);\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport theme from '../src/utils/theme';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport CollectorDashboard from '../src/views/CollectorDashboard';\r\nimport CustomerDetails from '../src/views/CustomerDetails';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport {ROLL_NUMBER} from '../src/utils/constants';\r\n\r\nconst styles = (theme) => ({\r\n  '@global': {\r\n    '*::-webkit-scrollbar': {\r\n      width: '0.4em',\r\n      height: '0.4em',\r\n    },\r\n    '*::-webkit-scrollbar-track': {\r\n      '-webkit-box-shadow': 'inset 0 0 6px rgba(0,0,0,0.00)',\r\n    },\r\n    '*::-webkit-scrollbar-thumb': {\r\n      backgroundColor: '#6D7183',\r\n      outline: '1px solid slategrey',\r\n    },\r\n  },\r\n  mainBackground: {\r\n    background: theme.palette.primary.main,\r\n    height: '100vh',\r\n    width: '100vw',\r\n    overflow: 'hidden',\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    height: 140,\r\n    width: 100,\r\n  },\r\n});\r\nclass App extends Component {\r\n  render() {\r\n    console.log('theme', theme);\r\n    const { classes } = this.props;\r\n    return (\r\n      // <MuiThemeProvider theme={theme}>\r\n      <div className={classes.mainBackground}>\r\n        <Router basename={`/${ROLL_NUMBER}`}>\r\n          <Switch>\r\n            <Route exact path=\"/\" component={CollectorDashboard} />\r\n            <Route path=\"/customer-dashboard\" component={CustomerDetails} />\r\n          </Switch>\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport theme from '../src/utils/theme';\r\nimport { MuiThemeProvider } from '@material-ui/core/styles';\r\nReactDOM.render(\r\n    <MuiThemeProvider theme={theme}>\r\n      <App />\r\n    </MuiThemeProvider>,\r\n  document.getElementById('root')\r\n);\r\n/*\r\nCRACKED BY ILLUMINATI\r\nTRUST US AND UNCOMMENT THIS CODE ONCE YOU SETUP YOUR REDUX STORE ;-)\r\n ReactDOM.render(\r\n   <Provider store={store}>\r\n     <MuiThemeProvider theme={theme}>\r\n       <App />\r\n     </MuiThemeProvider>\r\n   </Provider>,\r\n   document.getElementById('root')\r\n );\r\n*/\r\nserviceWorker.unregister();\r\n\r\n\r\n"],"sourceRoot":""}